{"version":3,"sources":["logo.svg","components/Api.js","components/Todoform.js","components/Todo.js","components/Todolist.js","App.js","reportWebVitals.js","index.js"],"names":["Api","useState","userdata","setData","useEffect","fetch","then","result","json","res","console","log","data","className","border","map","item","id","email","first_name","last_name","src","avatar","Todoform","props","edit","value","input","setInput","inputRef","useRef","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","Math","floor","random","text","placeholder","onChange","name","ref","onClick","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","todo","index","isComplete","Todolist","setTodos","test","newTodos","updatedTodos","removedArr","filter","todoId","newValue","prev","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d0de410.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect } from \"react\";\r\nfunction Api() {\r\n  const [userdata, setData] = useState([]);\r\n  useEffect(() => {\r\n    fetch(\"https://reqres.in/api/users?page=2\").then((result) => {\r\n      result.json().then((res) => {\r\n        console.log(\"response api\", res);\r\n        setData(res.data);\r\n      });\r\n    });\r\n  }, []);\r\n  //  console.warn(\"api data\",userdata)\r\n  return (\r\n    <div className=\"api\">\r\n      <h1>Question 2. Api call </h1>\r\n\r\n      {/* {data.map((elem,ind) =>{\r\n       <p>{elem.first_name}</p>\r\n     })} */}\r\n\r\n      <table border=\"1\">\r\n        <tr>\r\n          <td>ID</td>\r\n          <td>email</td>\r\n          <td>FirstName</td>\r\n          <td>LastName</td>\r\n          <td>Avatar</td>\r\n        </tr>\r\n        {userdata.map((item) => (\r\n          <tr>\r\n            <td>{item.id}</td>\r\n            <td>{item.email}</td>\r\n            <td>{item.first_name}</td>\r\n            <td>{item.last_name}</td>\r\n            <td>\r\n              <img src={item.avatar} />\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\nexport default Api;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction Todoform(props) {\r\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random() * 10000),\r\n      text: input,\r\n    });\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"todo-form\">\r\n      {props.edit ? (\r\n        <>\r\n          <input\r\n            placeholder=\"Update your item\"\r\n            value={input}\r\n            onChange={handleChange}\r\n            name=\"text\"\r\n            ref={inputRef}\r\n            className=\"todo-input edit\"\r\n          />\r\n          <button onClick={handleSubmit} className=\"todo-button edit\">\r\n            Update\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            placeholder=\"Add a todo\"\r\n            value={input}\r\n            onChange={handleChange}\r\n            name=\"text\"\r\n            className=\"todo-input\"\r\n            ref={inputRef}\r\n          />\r\n          <button onClick={handleSubmit} className=\"todo-button\">\r\n            Add todo\r\n          </button>\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Todoform;\r\n","import React, { useState } from \"react\";\r\nimport TodoForm from \"./Todoform\";\r\nimport { RiCloseCircleLine } from \"react-icons/ri\";\r\nimport { TiEdit } from \"react-icons/ti\";\r\n\r\nconst Todo = ({ todos, completeTodo, removeTodo, updateTodo }) => {\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: \"\",\r\n  });\r\n\r\n  const submitUpdate = (value) => {\r\n    updateTodo(edit.id, value);\r\n    setEdit({\r\n      id: null,\r\n      value: \"\",\r\n    });\r\n  };\r\n\r\n  if (edit.id) {\r\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n  }\r\n\r\n  return todos.map((todo, index) => (\r\n    <div\r\n      className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"}\r\n      key={index}\r\n    >\r\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n        {todo.text}\r\n      </div>\r\n      <div className=\"icons\">\r\n        <RiCloseCircleLine\r\n          onClick={() => removeTodo(todo.id)}\r\n          className=\"delete-icon\"\r\n        />\r\n        <TiEdit\r\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\r\n          className=\"edit-icon\"\r\n        />\r\n      </div>\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default Todo;\r\n","import React, { useState } from \"react\";\r\nimport Todoform from \"./Todoform\";\r\nimport Todo from \"./Todo\";\r\n\r\nfunction Todolist() {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const addTodo = (todo) => {\r\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return;\r\n    }\r\n\r\n    const newTodos = [todo, ...todos];\r\n\r\n    setTodos(newTodos);\r\n    console.log(...todos);\r\n  };\r\n\r\n  const updateTodo = (todoId, newValue) => {\r\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n      return;\r\n    }\r\n\r\n    setTodos((prev) =>\r\n      prev.map((item) => (item.id === todoId ? newValue : item))\r\n    );\r\n  };\r\n\r\n  const removeTodo = (id) => {\r\n    const removedArr = [...todos].filter((todo) => todo.id !== id);\r\n\r\n    setTodos(removedArr);\r\n  };\r\n\r\n  const completeTodo = (id) => {\r\n    let updatedTodos = todos.map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1> 1.Question welcome</h1>\r\n      <h3>What's the best trending technologyToday?</h3>\r\n      <Todoform onSubmit={addTodo} />\r\n      <Todo\r\n        todos={todos}\r\n        completeTodo={completeTodo}\r\n        removeTodo={removeTodo}\r\n        updateTodo={updateTodo}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Todolist;\r\n","import logo from './logo.svg';\nimport './App.css';\n\nimport Api from './components/Api';\n\nimport Todolist from './components/Todolist';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n  <Api />\n<Todolist/>\n\n\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}